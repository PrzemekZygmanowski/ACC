{"version":3,"sources":["commons/Button.tsx","commons/ButtonIcon.tsx","commons/Dialog.tsx","commons/HelpDialog.tsx","commons/NavLink.tsx","commons/LinkIcon.tsx","commons/NavMenu.tsx","commons/dialog/DialogHeader.tsx","commons/dialog/DialogContent.tsx","domain/Header/StartHelpDialog.tsx","commons/dialog/DialogFooter.tsx","domain/Header/StartMenu.tsx","domain/Header/HeaderHelpDialog.tsx","domain/Header/Header.tsx","pages/Header.tsx","commons/FormComponents/Input.tsx","commons/FormComponents/Label.tsx","commons/FormComponents/SubmitButton.tsx","commons/FormComponents/InputWrapper.tsx","commons/FormComponents/Select.tsx","domain/NewProject/components/NewProjectForm.tsx","domain/NewProject/reducers/newProjectActions.ts","domain/NewProject/container/NewProjectForm.tsx","domain/NewProject/components/NewRoomForm.tsx","domain/NewProject/reducers/roomsActions.ts","domain/NewProject/container/NewRoomForm.tsx","domain/NewProject/components/Room.tsx","domain/NewProject/components/RoomList.tsx","domain/NewProject/container/RoomList.tsx","domain/NewProject/components/NewProjectCard.tsx","domain/NewProject/container/NewProjectCard.tsx","domain/NewProject/pages/NewProject.tsx","domain/NotFound/NotFound.tsx","domain/NewProject/reducers/newProject.ts","domain/NewProject/reducers/rooms.ts","pages/NewProject.tsx","pages/NotFound.tsx","store.ts","App.tsx","index.tsx"],"names":["Button","className","onClick","label","ButtonIcon","icon","DialogStyle","display","flexDirection","alignItems","justifyContent","position","backgroundColor","boxShadow","padding","width","height","top","left","bottom","borderRadius","transition","Dialog","children","style","HelpDialogS","HelpDialog","Link","to","LinkIcon","NavMenu","DialogHeaderS","IconsS","right","DialogHeader","title","isButton","DialogContentS","overflow","DialogContent","StartHelpDialog","isOpen","faTimesCircle","DialogFooter","StartMenu","useState","isStartHelpDialogOpen","setStartHelpDialogOpen","openStartHelpDialog","NavLink","faQuestionCircle","HeaderHelpDialog","Header","isMenuOpen","setMenuOpen","isHelpDialogOpen","setHelpDialogOpen","openStartDialog","openHelpDialog","Input","props","useField","field","meta","placeholder","type","touched","error","Label","name","htmlFor","InputWrapper","Select","cities","id","NewProjectForm","values","onSubmit","initialValues","projectTitle","weatherStation","value","map","city","SubmitButton","NEW_PROJECT","setNewProject","payload","projectData","setProjectData","dispatch","useDispatch","NewRoomForm","submitNewRoom","roomName","roomArea","roomTemperature","NEW_ROOM","roomData","setRoomData","roomId","uuid4v","Room","area","temperature","faCog","console","log","faTrash","RoomList","rooms","room","slice","useSelector","state","NewProjectCard","newProject","NewProject","isProjectProvided","setProjectProvided","useEffect","NotFound","initialState","action","store","configureStore","reducer","newProjectReducer","roomsReducer","App","path","component","subscribe","getState","rootElement","document","getElementById","render"],"mappings":"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","file":"static/js/main.c3e5d1dd.chunk.js","sourcesContent":["import React from 'react';\r\nimport { ButtonT } from './interfaces/interfaces';\r\n\r\nconst Button = ({ className, onClick, label }: ButtonT) => {\r\n  return (\r\n    <button className={className} onClick={onClick}>\r\n      {label}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport \"./Buttons.scss\";\r\nimport { ButtonIconT } from \"./interfaces/interfaces\";\r\n\r\nconst ButtonIcon = ({ className, onClick, icon }: ButtonIconT) => {\r\n  return (\r\n    <button className={className} onClick={onClick}>\r\n      <FontAwesomeIcon icon={icon} />\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ButtonIcon;\r\n","import React from \"react\";\r\nimport { DialogT } from \"./interfaces/interfaces\";\r\nimport CSS from \"csstype\";\r\n\r\nconst DialogStyle: CSS.Properties = {\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"space-between\",\r\n  position: \"absolute\",\r\n  backgroundColor: \"#fff\",\r\n  boxShadow: \"2px 2px 5px rgba(0,0,0,0.5)\",\r\n  padding: \"3%\",\r\n  width: \"90vw\",\r\n  height: \"90vh\",\r\n  top: \"5%\",\r\n  left: \"5%\",\r\n  bottom: \"5%\",\r\n  borderRadius: \"10px\",\r\n  transition: \"0.3s ease-in-out\"\r\n};\r\n\r\nconst Dialog = ({ className, children }: DialogT) => {\r\n  return (\r\n    <div style={DialogStyle} className={className}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\nexport default Dialog;\r\n","import React from \"react\";\r\nimport { DialogT } from \"./interfaces/interfaces\";\r\nimport CSS from \"csstype\";\r\n\r\nconst HelpDialogS: CSS.Properties = {\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"space-between\",\r\n  position: \"absolute\",\r\n  backgroundColor: \"#fff\",\r\n  boxShadow: \"2px 2px 5px rgba(0,0,0,0.5)\",\r\n  padding: \"3%\",\r\n  width: \"80vw\",\r\n  height: \"80vh\",\r\n  borderRadius: \"10px\",\r\n  transition: \"0.3s ease-in-out\"\r\n};\r\n\r\nconst HelpDialog = ({ className, children }: DialogT) => {\r\n  return (\r\n    <div style={HelpDialogS} className={className}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\nexport default HelpDialog;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { NavLinkT } from \"./interfaces/interfaces\";\r\n\r\nconst Link = ({ className, label, to }: NavLinkT) => {\r\n  return (\r\n    <NavLink className={className} to={to}>\r\n      {label}\r\n    </NavLink>\r\n  );\r\n};\r\n\r\nexport default Link;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { LinkIconT } from './interfaces/interfaces';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst LinkIcon = ({ className, icon, to }: LinkIconT) => {\r\n  return (\r\n    <NavLink className={className} to={to}>\r\n      <FontAwesomeIcon icon={icon} />\r\n    </NavLink>\r\n  );\r\n};\r\n\r\nexport default LinkIcon;\r\n","import React from 'react';\r\nimport { MenuProps } from './interfaces/interfaces';\r\n\r\nconst NavMenu = ({ children, className }: MenuProps) => {\r\n  return <nav className={className}>{children}</nav>;\r\n};\r\n\r\nexport default NavMenu;\r\n","import React from 'react';\r\nimport CSS from 'csstype';\r\nimport { DialogHeaderT } from '../interfaces/interfaces';\r\n\r\nconst DialogHeaderS: CSS.Properties = {\r\n  display: 'flex',\r\n  // paddingBottom: '35px',\r\n};\r\nconst IconsS: CSS.Properties = {\r\n  position: 'fixed',\r\n  right: '5%',\r\n};\r\n\r\nexport const DialogHeader = ({ title, children, isButton }: DialogHeaderT) => {\r\n  return (\r\n    <div style={DialogHeaderS}>\r\n      <div>\r\n        <h2>{title}</h2>\r\n      </div>\r\n      {isButton ? <div style={IconsS}>{children}</div> : <></>}\r\n    </div>\r\n  );\r\n};\r\n","import React, { ReactNode } from 'react';\r\nimport CSS from 'csstype';\r\nimport { ChildrenT } from '../interfaces/interfaces';\r\n\r\nconst DialogContentS: CSS.Properties = {\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  alignItems: 'center',\r\n  justifyContent: 'space-between',\r\n  overflow: 'scroll',\r\n  height: '80%',\r\n  width: '100%',\r\n};\r\n\r\nexport const DialogContent = ({ children }: ChildrenT) => {\r\n  return <div style={DialogContentS}>{children}</div>;\r\n};\r\n","import React from 'react';\r\nimport { HelpDialog, ButtonIcon } from '../../commons';\r\nimport { DialogHeader } from '../../commons/dialog/DialogHeader';\r\nimport { DialogContent } from '../../commons/dialog/DialogContent';\r\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport const StartHelpDialog = ({ isOpen, onClick }: any) => {\r\n  return (\r\n    <HelpDialog className={`startHelpDialog startHelpDialog--active-${isOpen}`}>\r\n      <DialogHeader title='Pomoc' isButton>\r\n        {' '}\r\n        <ButtonIcon\r\n          className='iconBtn'\r\n          onClick={onClick}\r\n          icon={faTimesCircle}\r\n        />\r\n      </DialogHeader>\r\n      <DialogContent>\r\n        {' '}\r\n        <p>\r\n          W tej chwili jedyną dostępną opcją kalkulatora jest stworzenie\r\n          pojedynczego projektu. Nad pozostałymi opcjami pracuje cały czas. W\r\n          założeniu po zarejestrowaniu i zalogowaniu użytkownik będzie mógł\r\n          stworzyć więcej niż jeden projekt, zapisać każdy z nich, dla każdego z\r\n          projektów nie będzie ograniczeń liczby pomieszczeń i będzie możliwość\r\n          wyeksportowania obliczeń do PDF lub Excela. Opcja pojedynczego\r\n          projektu jest idealna do szybkich obliczeń pojedynczego pomieszczenia\r\n          lub domku jednorodzinnego.\r\n        </p>\r\n      </DialogContent>\r\n    </HelpDialog>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { ChildrenT } from '../interfaces/interfaces';\r\n\r\nexport const DialogFooter = ({ children }: ChildrenT) => {\r\n  return <div>{children}</div>;\r\n};\r\n","import React, { useState } from 'react';\r\nimport '../../styles/Dialog.scss';\r\nimport '../../commons/MenuStyle.scss';\r\nimport { Dialog, ButtonIcon, NavLink, NavMenu } from '../../commons';\r\nimport { StartHelpDialog } from './StartHelpDialog';\r\nimport { DialogHeader } from '../../commons/dialog/DialogHeader';\r\nimport { DialogContent } from '../../commons/dialog/DialogContent';\r\nimport { DialogFooter } from '../../commons/dialog/DialogFooter';\r\nimport {\r\n  faTimesCircle,\r\n  faQuestionCircle,\r\n} from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport const StartMenu = ({ isOpen, onClick }: any) => {\r\n  const [isStartHelpDialogOpen, setStartHelpDialogOpen] = useState(false);\r\n\r\n  const openStartHelpDialog = () => {\r\n    setStartHelpDialogOpen(!isStartHelpDialogOpen);\r\n  };\r\n  const openDialog = () => {\r\n    console.log('open dialog');\r\n  };\r\n\r\n  return (\r\n    <Dialog className={`startDialog startDialog--active-${isOpen}`}>\r\n      <DialogHeader title='Zaczynamy' isButton>\r\n        <ButtonIcon\r\n          className='iconBtn'\r\n          onClick={onClick}\r\n          icon={faTimesCircle}\r\n        />\r\n      </DialogHeader>\r\n      <DialogContent>\r\n        <NavMenu className='startMenu'>\r\n          <h3>Zaloguj się</h3>\r\n          <p>Jeśli chcesz korzystać ze wszystkich dobrodziejstw aplikacji</p>\r\n          <NavLink className='linkBtn' label='Zaloguj się' to='/logIn' />\r\n          <h3>Zarejestruj się</h3>\r\n          <p>Jeżeli nigdy tego nie robiłeś</p>\r\n          <NavLink className='linkBtn' label='Zarejestruj się' to='/signUp' />\r\n          <h3>Stwórz projekt</h3>\r\n          <p>Jeżeli chcesz szybko coś policzyć</p>\r\n          <NavLink\r\n            className='linkBtn'\r\n            label='Stwórz projekt'\r\n            to='/newProject'\r\n          />\r\n        </NavMenu>\r\n      </DialogContent>\r\n      <DialogFooter>\r\n        <ButtonIcon\r\n          className='iconBtn'\r\n          onClick={openStartHelpDialog}\r\n          icon={faQuestionCircle}\r\n        />\r\n      </DialogFooter>\r\n      <StartHelpDialog\r\n        isOpen={isStartHelpDialogOpen}\r\n        onClick={openStartHelpDialog}\r\n      />\r\n    </Dialog>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { HelpDialog, ButtonIcon } from '../../commons';\r\nimport { DialogHeader } from '../../commons/dialog/DialogHeader';\r\nimport { DialogContent } from '../../commons/dialog/DialogContent';\r\nimport { DialogFooter } from '../../commons/dialog/DialogFooter';\r\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport const HeaderHelpDialog = ({ isOpen, onClick }: any) => {\r\n  return (\r\n    <HelpDialog className={`startHelpDialog startHelpDialog--active-${isOpen}`}>\r\n      <DialogHeader title='Cześć' isButton>\r\n        {' '}\r\n        <ButtonIcon\r\n          className='iconBtn'\r\n          onClick={onClick}\r\n          icon={faTimesCircle}\r\n        />\r\n      </DialogHeader>\r\n      <DialogContent>\r\n        {' '}\r\n        <p>\r\n          Chciałbym zademonstrować swój projekt kalkulatora zysków ciepła\r\n          wspomagającego projektowanie instalacji klimatyzacji dla wszelakich\r\n          budynków. Kalkulator pozwoli Ci oszacować zyski ciepła dla pomieszczeń\r\n          oraz wstępnie określić wymaganą moc klimatyzatora dla pomieszczenia.\r\n          Aby rozpocząć wybierz jedną z poniższych opcji lub wciśnij znak\r\n          zapytania by uzyskać pomoc.\r\n        </p>\r\n      </DialogContent>\r\n      <DialogFooter>\r\n        {' '}\r\n        <p>pozdrawiam</p>\r\n        <h3>Przemek Zygmanowski</h3>\r\n      </DialogFooter>\r\n    </HelpDialog>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\r\nimport '../../styles/Header.scss';\r\nimport { Button, ButtonIcon } from '../../commons';\r\nimport { StartMenu } from './StartMenu';\r\nimport { HeaderHelpDialog } from './HeaderHelpDialog';\r\nimport { faQuestionCircle } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport const Header = () => {\r\n  const [isMenuOpen, setMenuOpen] = useState(false);\r\n  const [isHelpDialogOpen, setHelpDialogOpen] = useState(false);\r\n  const openStartDialog = () => {\r\n    setMenuOpen(!isMenuOpen);\r\n  };\r\n  const openHelpDialog = () => {\r\n    setHelpDialogOpen(!isHelpDialogOpen);\r\n  };\r\n  return (\r\n    <header className='header'>\r\n      <h1 className='header__h1'>Kalkulator Zysków Ciepła</h1>\r\n      <h2 className='header__h2'>\r\n        Oblicz jaką moc powinien mieć Twój klimatyzator\r\n      </h2>\r\n      <Button className='mainBtn' label='Zaczynamy' onClick={openStartDialog} />\r\n      <ButtonIcon\r\n        className='iconBtn'\r\n        onClick={openHelpDialog}\r\n        icon={faQuestionCircle}\r\n      />\r\n      <StartMenu isOpen={isMenuOpen} onClick={openStartDialog} />\r\n      <HeaderHelpDialog isOpen={isHelpDialogOpen} onClick={openHelpDialog} />\r\n    </header>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Header as HeaderComponent } from '../domain/Header/Header';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <>\r\n      <HeaderComponent />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { useField, FieldHookConfig } from 'formik';\r\n\r\nconst Input = (props: FieldHookConfig<string>) => {\r\n  const [field, meta] = useField(props);\r\n  return (\r\n    <>\r\n      <input\r\n        className='text_input'\r\n        {...field}\r\n        placeholder={props.placeholder}\r\n        type={props.type}\r\n      />\r\n      {meta.touched && meta.error ? (\r\n        <div className='error'>{meta.error}</div>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from 'react';\r\nimport { LabelT } from '../interfaces/interfaces';\r\n\r\nconst Label = ({ name, label }: LabelT) => {\r\n  return <label htmlFor={name}>{label}</label>;\r\n};\r\n\r\nexport default Label;\r\n","import React from 'react';\r\nimport { SubmitT } from '../interfaces/interfaces';\r\n\r\nconst Button = ({ className, type, label }: SubmitT) => {\r\n  return (\r\n    <button className={className} type={type}>\r\n      {label}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport { InputWrapperT } from '../interfaces/interfaces';\r\n\r\nconst InputWrapper = ({ className, children }: InputWrapperT) => {\r\n  return <div className={className}>{children}</div>;\r\n};\r\n\r\nexport default InputWrapper;\r\n","import { useField, FieldHookConfig, FieldProps } from 'formik';\r\nimport React from 'react';\r\n\r\n//////////fixme => dont use any///////////\r\nconst Select = ({ ...props }: any) => {\r\n  const [field, meta] = useField(props);\r\n  return (\r\n    <>\r\n      <select {...field} {...props} />\r\n      {meta.touched && meta.error ? (\r\n        <div className='error'>{meta.error}</div>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import React, { FC } from 'react';\r\nimport '../../../commons/MenuStyle.scss';\r\nimport '../../../styles/Form.scss';\r\nimport { Formik, Form } from 'formik';\r\nimport {\r\n  Input,\r\n  Label,\r\n  InputWrapper,\r\n  SubmitButton,\r\n  Select,\r\n} from '../../../commons/FormComponents';\r\nimport { ProjectValues } from '../interfaces';\r\n\r\nexport interface newProjectFormT {\r\n  values: ProjectValues;\r\n  onSubmit: (values: ProjectValues) => void;\r\n}\r\n\r\ninterface cityT {\r\n  id: number;\r\n  name: string;\r\n}\r\nconst InputS = {\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n};\r\nconst cities = [\r\n  { id: 1, name: 'Łódź' },\r\n  { id: 2, name: 'Gdańsk' },\r\n  { id: 3, name: 'Toruń' },\r\n];\r\n\r\nexport const NewProjectForm: FC<newProjectFormT> = ({\r\n  values,\r\n  onSubmit,\r\n}: newProjectFormT) => {\r\n  const initialValues: ProjectValues = { projectTitle: '', weatherStation: '' };\r\n  return (\r\n    <>\r\n      <Formik initialValues={values || initialValues} onSubmit={onSubmit}>\r\n        <Form className='form_container'>\r\n          <InputWrapper className='input_wrapper'>\r\n            <Label label='Nazwa projektu' name='projectTitle' />\r\n            <Input\r\n              name='projectTitle'\r\n              type='text'\r\n              placeholder='Nazwa projektu'\r\n            />\r\n          </InputWrapper>\r\n          <InputWrapper className='input_wrapper'>\r\n            <Label\r\n              label='Najbliższa stacja meterologiczna'\r\n              name='weatherStation'\r\n            />\r\n            <Select name='weatherStation'>\r\n              <option value=''>Najbliższa stacja meterologiczna</option>\r\n              {cities.map((city: cityT) => {\r\n                return <option value={city.name}>{city.name}</option>;\r\n              })}\r\n            </Select>\r\n          </InputWrapper>\r\n          <SubmitButton className='submitBtn' type='submit' label='Zapisz' />\r\n        </Form>\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\n","import { NewProjectAction } from '../interfaces';\r\n\r\nexport const NEW_PROJECT = 'NEW_PROJECT';\r\n\r\nexport const setNewProject = (\r\n  projectTitle: string,\r\n  weatherStation: string\r\n): NewProjectAction => {\r\n  return {\r\n    type: NEW_PROJECT,\r\n    payload: {\r\n      projectTitle: projectTitle || '',\r\n      weatherStation: weatherStation || '',\r\n    },\r\n  };\r\n};\r\n","import React, { FC, useState } from 'react';\r\nimport { NewProjectForm as NewProjectFormComponent } from '../components/NewProjectForm';\r\nimport { ProjectValues } from '../interfaces';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setNewProject } from '../reducers/newProjectActions';\r\n\r\nexport const NewProjectForm: any = () => {\r\n  const [projectData, setProjectData] = useState({\r\n    projectTitle: '',\r\n    weatherStation: '',\r\n  });\r\n  const dispatch = useDispatch();\r\n\r\n  const onSubmit = (values: ProjectValues) => {\r\n    dispatch(setNewProject(values.projectTitle, values.weatherStation));\r\n    setProjectData({\r\n      projectTitle: values.projectTitle,\r\n      weatherStation: values.weatherStation,\r\n    });\r\n  };\r\n\r\n  return <NewProjectFormComponent values={projectData} onSubmit={onSubmit} />;\r\n};\r\n","import React from 'react';\r\nimport { Formik, Form } from 'formik';\r\nimport {\r\n  Input,\r\n  Label,\r\n  InputWrapper,\r\n  SubmitButton,\r\n} from '../../../commons/FormComponents';\r\nimport { RoomT } from '../interfaces';\r\n\r\nexport interface RoomFormT {\r\n  values: RoomT;\r\n  submitNewRoom: (values: RoomT) => void;\r\n}\r\n\r\nexport const NewRoomForm = ({ values, submitNewRoom }: RoomFormT) => {\r\n  const initialValues: RoomT = {\r\n    id: '',\r\n    roomName: '',\r\n    roomArea: 0,\r\n    roomTemperature: 0,\r\n  };\r\n\r\n  const valuetext = (value: number) => {\r\n    return `${value}°C`;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Formik initialValues={values || initialValues} onSubmit={submitNewRoom}>\r\n        <Form className='form_container'>\r\n          <InputWrapper className='input_wrapper'>\r\n            <Label label='Nazwa pomieszczenia' name='roomName' />\r\n            <Input\r\n              name='roomName'\r\n              type='text'\r\n              placeholder='Nazwa pomieszczenia'\r\n            />\r\n          </InputWrapper>\r\n          <InputWrapper className='input_wrapper'>\r\n            <Label label='Powierzchnia' name='roomArea' />\r\n            <Input name='roomArea' type='number' placeholder='Powierzchnia' />\r\n          </InputWrapper>\r\n          <InputWrapper className='input_wrapper'>\r\n            <Label label='Temperatura' name='roomTemperature' />\r\n            <Input\r\n              name='roomTemperature'\r\n              type='number'\r\n              placeholder='Temperatura'\r\n            />\r\n          </InputWrapper>\r\n          <SubmitButton className='submitBtn' type='submit' label='Zapisz' />\r\n        </Form>\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\n","import { roomAction } from '../interfaces';\r\n\r\nexport const NEW_ROOM = 'NEW_ROOM';\r\n\r\nexport const addNewRoom = (\r\n  id: string,\r\n  roomName: string,\r\n  roomArea: number,\r\n  roomTemperature: number\r\n): roomAction => {\r\n  return {\r\n    type: NEW_ROOM,\r\n    payload: {\r\n      id: id,\r\n      roomName: roomName,\r\n      roomArea: roomArea,\r\n      roomTemperature: roomTemperature,\r\n    },\r\n  };\r\n};\r\n","import React, { useState } from 'react';\r\nimport { NewRoomForm as NewRoomFormComponent } from '../components/NewRoomForm';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addNewRoom } from '../reducers/roomsActions';\r\nimport { RoomT } from '../interfaces';\r\nimport { v4 as uuid4v } from 'uuid';\r\n\r\nexport const NewRoomForm = () => {\r\n  const [roomData, setRoomData] = useState({\r\n    id: '',\r\n    roomName: '',\r\n    roomArea: 0,\r\n    roomTemperature: 0,\r\n  });\r\n  const dispatch = useDispatch();\r\n\r\n  const submitNewRoom = (values: RoomT) => {\r\n    const roomId = uuid4v();\r\n\r\n    dispatch(\r\n      addNewRoom(\r\n        roomId,\r\n        values.roomName,\r\n        values.roomArea,\r\n        values.roomTemperature\r\n      )\r\n    );\r\n    setRoomData({\r\n      id: roomId,\r\n      roomName: values.roomName,\r\n      roomArea: values.roomArea,\r\n      roomTemperature: values.roomTemperature,\r\n    });\r\n  };\r\n  return (\r\n    <NewRoomFormComponent values={roomData} submitNewRoom={submitNewRoom} />\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { LinkIcon, ButtonIcon } from '../../../commons';\r\nimport { faCog, faTrash } from '@fortawesome/free-solid-svg-icons';\r\nimport '../../../styles/styles.scss';\r\n// import {RoomT} from '../interfaces'\r\n\r\ninterface RoomT {\r\n  id: string;\r\n  name: string;\r\n  area: number;\r\n  temperature: number;\r\n}\r\nconst Room = ({ id, name, area, temperature }: RoomT) => {\r\n  return (\r\n    <li className='room'>\r\n      <div>\r\n        {' '}\r\n        <span>{id}</span>\r\n        <span>{name}</span>\r\n        <span>{area}</span>\r\n        <span>{temperature}</span>\r\n      </div>\r\n      <div className='room_btns'>\r\n        {' '}\r\n        <LinkIcon className='edit-room-btn' to='/' icon={faCog} />\r\n        <ButtonIcon\r\n          className='delete-room-btn'\r\n          onClick={() => {\r\n            console.log('usun');\r\n          }}\r\n          icon={faTrash}\r\n        />\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Room;\r\n","import React from 'react';\r\nimport Room from './Room';\r\nimport '../../../styles/styles.scss';\r\nimport { RoomsT, RoomT } from '../interfaces';\r\n\r\nconst RoomList = ({ rooms }: RoomsT) => {\r\n  console.log(rooms);\r\n\r\n  return (\r\n    <ul className='rooms'>\r\n      {rooms &&\r\n        rooms.map((room: RoomT) => {\r\n          return (\r\n            <Room\r\n              key={room.id}\r\n              id={room.id.slice(0, 3)}\r\n              name={room.roomName}\r\n              area={room.roomArea}\r\n              temperature={room.roomTemperature}\r\n            />\r\n          );\r\n        })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default RoomList;\r\n","import React from 'react';\r\nimport { RoomList as RoomListComponent } from '../components';\r\nimport { useSelector } from 'react-redux';\r\nimport { State } from '../../../interfaces';\r\nimport { RoomsT, RoomT } from '../interfaces';\r\n\r\n// const rooms = [\r\n//   { id: '1', roomName: 'kuchnia', roomArea: 5, roomTemperature: 24 },\r\n//   { id: '2', roomName: 'salon', roomArea: 15, roomTemperature: 24 },\r\n//   { id: '3', roomName: 'sypialnia', roomArea: 10, roomTemperature: 24 },\r\n// ];\r\n\r\nconst RoomList = () => {\r\n  const rooms = useSelector<State, RoomsT>((state: State) => state.rooms);\r\n\r\n  return <RoomListComponent rooms={rooms.rooms} />;\r\n};\r\n\r\nexport default RoomList;\r\n","import React from 'react';\r\nimport { ProjectValues } from '../interfaces';\r\n\r\nexport interface newProjectT {\r\n  nameLabel: string;\r\n  weatherLabel: string;\r\n}\r\n\r\nexport const NewProjectCard = ({\r\n  projectTitle,\r\n  weatherStation,\r\n}: ProjectValues) => {\r\n  return (\r\n    <>\r\n      <>\r\n        <h3>Nazwa Projektu</h3>\r\n        <h2>{projectTitle}</h2>\r\n      </>\r\n      <>\r\n        <h3>Stacja meterologiczna</h3>\r\n        <h2>{weatherStation}</h2>\r\n      </>\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { NewProjectCard as NewProjectCardComponent } from '../components/NewProjectCard';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { State } from '../../../interfaces';\r\nimport { ProjectValues } from '../interfaces';\r\nimport { Button } from '../../../commons';\r\nimport { setNewProject } from '../reducers/newProjectActions';\r\n\r\nexport const NewProjectCard = () => {\r\n  const dispatch = useDispatch();\r\n  const newProject = useSelector<State, ProjectValues>(\r\n    (state) => state.newProject\r\n  );\r\n  const handleModify = () => {\r\n    dispatch(setNewProject('', ''));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {' '}\r\n      <NewProjectCardComponent\r\n        projectTitle={newProject.projectTitle}\r\n        weatherStation={newProject.weatherStation}\r\n      />\r\n      <Button className='mainBtn' label='Zmień dane' onClick={handleModify} />\r\n    </>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport '../../../styles/Dialog.scss';\r\nimport { Dialog, Button, ButtonIcon } from '../../../commons';\r\nimport { NewProjectForm } from '../container/NewProjectForm';\r\nimport { NewRoomForm } from '../container/NewRoomForm';\r\nimport RoomList from '../container/RoomList';\r\nimport { DialogHeader } from '../../../commons/dialog/DialogHeader';\r\nimport { DialogContent } from '../../../commons/dialog/DialogContent';\r\nimport { DialogFooter } from '../../../commons/dialog/DialogFooter';\r\nimport {\r\n  faTimesCircle,\r\n  faQuestionCircle,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport Room from '../components/Room';\r\nimport { NewProjectCard } from '../container/NewProjectCard';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { State } from '../../../interfaces';\r\nimport { ProjectValues } from '../interfaces';\r\n\r\nconst NewProject = () => {\r\n  const [isProjectProvided, setProjectProvided] = useState(false);\r\n  const newProject = useSelector<State, ProjectValues>(\r\n    (state) => state.newProject\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (newProject.projectTitle !== '') {\r\n      setProjectProvided(true);\r\n    } else if (newProject.projectTitle === '') {\r\n      setProjectProvided(false);\r\n    }\r\n  }, [newProject]);\r\n\r\n  console.log();\r\n  const onClick = () => {\r\n    console.log('powrót');\r\n  };\r\n  const openNewProjectHelper = () => {\r\n    console.log('pomoc');\r\n  };\r\n  return (\r\n    <Dialog className='startDialog'>\r\n      <DialogHeader title='Nowy Projekt' isButton>\r\n        <ButtonIcon\r\n          className='iconBtn'\r\n          onClick={onClick}\r\n          icon={faTimesCircle}\r\n        />\r\n      </DialogHeader>\r\n      <DialogContent>\r\n        {!isProjectProvided ? <NewProjectForm /> : <NewProjectCard />}\r\n        <NewRoomForm />\r\n        <RoomList />\r\n      </DialogContent>\r\n      <DialogFooter>\r\n        <ButtonIcon\r\n          className='iconBtn'\r\n          onClick={openNewProjectHelper}\r\n          icon={faQuestionCircle}\r\n        />\r\n      </DialogFooter>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default NewProject;\r\n","import React from 'react';\r\nimport '../../styles/Dialog.scss';\r\nimport { Dialog, NavLink, NavMenu } from '../../commons';\r\nimport { DialogHeader } from '../../commons/dialog/DialogHeader';\r\nimport { DialogContent } from '../../commons/dialog/DialogContent';\r\nimport { DialogFooter } from '../../commons/dialog/DialogFooter';\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <Dialog className='startDialog'>\r\n      <DialogHeader title='Ups...' isButton={false} />\r\n      <DialogContent>\r\n        <p>Pracuje jeszcze nad tym ;)</p>\r\n      </DialogContent>\r\n      <DialogFooter>\r\n        <NavMenu className=''>\r\n          {' '}\r\n          <NavLink className='mainBtn' label='Powrót' to='/' />\r\n        </NavMenu>\r\n      </DialogFooter>\r\n    </Dialog>\r\n  );\r\n};\r\nexport default NotFound;\r\n","import { ProjectValues } from '../interfaces';\r\nimport { NEW_PROJECT } from './newProjectActions';\r\nimport { AnyAction } from 'redux';\r\n\r\nconst initialState = {\r\n  id: '',\r\n  projectTitle: '',\r\n  weatherStation: '',\r\n};\r\n\r\nexport default (\r\n  state: ProjectValues = initialState,\r\n  action: AnyAction\r\n): ProjectValues => {\r\n  switch (action.type) {\r\n    case NEW_PROJECT: {\r\n      return {\r\n        ...action.payload,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { NEW_ROOM } from './roomsActions';\r\nimport { AnyAction } from 'redux';\r\nimport { RoomsT } from '../interfaces';\r\n\r\nconst initialState = {\r\n  rooms: [],\r\n};\r\n\r\nexport default (state: RoomsT = initialState, action: AnyAction): RoomsT => {\r\n  switch (action.type) {\r\n    case NEW_ROOM: {\r\n      return {\r\n        ...state,\r\n        rooms: [...state.rooms, action.payload],\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from 'react';\r\nimport { NewProject as NewProjectComponent } from '../domain';\r\n\r\nconst NewProject = () => {\r\n  return (\r\n    <>\r\n      <NewProjectComponent />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewProject;\r\n","import React from 'react';\r\nimport { NotFound as NotFoundComponent } from '../domain';\r\n\r\nconst NotFound = () => {\r\n  return <NotFoundComponent />;\r\n};\r\n\r\nexport default NotFound;\r\n","// import { createStore } from 'redux';\r\n// import rootReducer from './reducers';\r\n// import { devToolsEnhancer } from 'redux-devtools-extension';\r\n\r\n// export default createStore(rootReducer, devToolsEnhancer({}));\r\nimport { configureStore } from '@reduxjs/toolkit';\r\nimport newProjectReducer from './domain/NewProject/reducers/newProject';\r\nimport roomsReducer from './domain/NewProject/reducers/rooms';\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    // Define a top-level state field named `todos`, handled by `todosReducer`\r\n    newProject: newProjectReducer,\r\n    rooms: roomsReducer,\r\n  },\r\n});\r\n\r\nexport default store;\r\n","import * as React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport './styles.scss';\r\nimport { Header, NotFound, NewProject } from './pages';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\n\r\nstore.subscribe(() => console.log(store.getState()));\r\nconsole.log(store.getState());\r\n\r\nexport default function App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <Router>\r\n        <Switch>\r\n          {' '}\r\n          <Route path='/signUp' component={NotFound} />\r\n          <Route path='/logIn' component={NotFound} />\r\n          <Route path='/newProject' component={NewProject} />\r\n          <Route path='/' component={Header} />\r\n        </Switch>\r\n      </Router>\r\n    </Provider>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport { render } from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nrender(<App />, rootElement);\r\n"],"sourceRoot":""}